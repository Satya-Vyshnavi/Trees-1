T.c --> O(n)
S.c --> O(h)
class Solution {
     HashMap<Integer, Integer> map;
     int idx ;
    public TreeNode buildTree(int[] preorder, int[] inorder) {
    if(preorder == null || preorder.length ==0){
        return null;
    }
     map = new HashMap<>();
     for(int i =0;i<inorder.length;i++){
         map.put(inorder[i],i);
     } 
     return dfs(preorder,0,inorder.length-1);
    }
    private TreeNode dfs(int[] preorder,int start, int end){ 
        if(start> end) return null;
        int rootval = preorder[idx];
        int rootidx = map.get(rootval);
        idx++;
        TreeNode root = new TreeNode(rootval);
        root.left = dfs(preorder,start,rootidx-1);
        root.right = dfs(preorder,rootidx+1,end);
        return root;
    }
}